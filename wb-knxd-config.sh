#!/bin/bash

mapfile -t < <(
  jq -r '
    .Global.Error,
    .Global.Trace,
    .LocalListener.ListenTcp,
    .LocalListener.ListenLocal,
    .Interface.OtherOptions,
    .MulticastServer.Name,
    .Address.EibAddr,
    .Address.ClientAddrs,
    .Interface.Layer2,
    .MulticastServer.Address,
    .Cache.GroupCache,
    .MulticastServer.Discovery,
    .MulticastServer.Tunnelling,
    .MulticastServer.Routing,
    .MulticastServer.Server,
    .MulticastServer.Forced
  ' /etc/wb-knxd-config.conf
)

error=${MAPFILE[0]}        # "null" or "SomeText" ok
trace=${MAPFILE[1]}        # "null" or "SomeText" ok
listenTcp=${MAPFILE[2]}    # "null" or "SomeText" ok
listenLocal=${MAPFILE[3]}  # "null" or "SomeText" ok
otherOptions=${MAPFILE[4]} # "" or "SomeText"
name=${MAPFILE[5]}         # "" or "SomeText" ok
eibAddr=${MAPFILE[6]}      # "SomeText" ok
clientAddrs=${MAPFILE[7]}  # "SomeText" ok
layer2=${MAPFILE[8]}       # "SomeText"
address=${MAPFILE[9]}      # "SomeText" ok
groupCache=${MAPFILE[10]}  # true/false/"null" ok
discovery=${MAPFILE[11]}   # true/false ok
tunnelling=${MAPFILE[12]}  # true/false ok
routing=${MAPFILE[13]}     # true/false ok
server=${MAPFILE[14]}      # true/false ok
forced=${MAPFILE[15]}      # true/false ok

if [[ "$error" = "null" ]]; then
	error=""
else
	error="-f$error"
fi

if [[ "$trace" = "null" ]]; then
	trace=""
else
	trace="-t$trace "
fi

if [[ "$listenTcp" = "null" ]]; then
	listenTcp=""
else
	listenTcp="-i $listenTcp "
fi

if [[ "$listenLocal" = "null" ]]; then
	listenLocal=""
else
	listenLocal="-u $listenLocal "
fi

if [[ "$groupCache" = "true" ]]; then
	groupCache="-c "
else
	groupCache=""
fi

if [[ "$server" = "true" ]]; then
	if [[ "$name" = "" ]]; then
		server="-S $address "
	else
		server="-n $name -S $address "
	fi
	if [[ "$discovery" = "true" ]]; then
		discovery="-D "
	else
		discovery=""
	fi
	if [[ "$tunnelling" = "true" ]]; then
		tunnelling="-T "
	else
		tunnelling=""
	fi
	if [[ "$routing" = "true" ]]; then
		routing="-R "
	else
		routing=""
	fi
	if [[ "$forced" = "true" ]]; then
		forced="--allow-forced-broadcast "
	else
		forced=""
	fi
else
	forced=""
	discovery=""
	tunnelling=""
	routing=""
	server=""
fi

# check if layer2 device present in system
KNX_DEVICE=${layer2/#*:/}  # remove prefix
if [[ -e "$KNX_DEVICE" ]]; then
    echo "$KNX_DEVICE found, enabling level2 in knxd"
    LAYER2_ARGS="-b $layer2"
else
    echo "No $KNX_DEVICE found, disabling level2"
fi


#knxd [global-section] [address-section] [cache-section] [multicast-server-section] [local-listener-section] [interface-sections]
echo "# This file is automatically generated by /etc/wb-knxd-config.conf from wb-knxd-config. Do not edit manually." > /etc/knxd.conf
echo "KNXD_OPTS=\"$trace$error -e $eibAddr -E $clientAddrs $groupCache$forced$discovery$tunnelling$routing$server$listenTcp$listenLocal $LAYER2_ARGS $otherOptions\"" >> /etc/knxd.conf
echo "Restart knxd"
service knxd restart
